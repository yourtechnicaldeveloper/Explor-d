(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material'), require('@angular/forms'), require('@angular/flex-layout')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', '@angular/material', '@angular/forms', '@angular/flex-layout'], factory) :
    (global = global || self, factory(global.angularMaterialExtensionsFaq = {}, global.ng.common, global.ng.core, global.ng.material, global.ng.forms, global.ng['flex-layout']));
}(this, function (exports, common, core, material, forms, flexLayout) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFaqAdminComponent = /** @class */ (function () {
        function MatFaqAdminComponent() {
            this.title = 'Admin';
            this.onFAQItemAdded = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        MatFaqAdminComponent.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.question = this.answer = undefined;
        };
        /**
         * @return {?}
         */
        MatFaqAdminComponent.prototype.add = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var faqItem = {
                question: this.question,
                answer: this.answer
            };
            this.onFAQItemAdded.emit(faqItem);
            this.reset();
        };
        MatFaqAdminComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'mat-faq-admin',
                        template: "\n    <mat-toolbar color=\"primary\">{{title}}</mat-toolbar>\n    <mat-card>\n      <mat-card-content fxLayout=\"column\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>The question</mat-label>\n          <input matInput [(ngModel)]=\"question\">\n          <mat-hint>Add here the question of your clients</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>The answer</mat-label>\n          <textarea matInput [(ngModel)]=\"answer\"></textarea>\n          <mat-hint>Please type an appropriate answer here to the above question</mat-hint>\n        </mat-form-field>\n      </mat-card-content>\n\n      <mat-card-actions fxLayoutAlign=\"end\">\n        <button mat-fab color=\"primary\" (click)=\"add()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  ",
                        styles: ["\n    .full-width{width:100%}.mat-form-field{margin:.8rem 0}\n  "]
                    },] },
        ];
        MatFaqAdminComponent.propDecorators = {
            title: [{ type: core.Input }],
            onFAQItemAdded: [{ type: core.Output }]
        };
        return MatFaqAdminComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFaqComponent = /** @class */ (function () {
        function MatFaqComponent() {
            this.title = 'FAQ';
            this.multi = false;
            this.displayMode = 'default'; // or flat
            // or flat
            this.faqList = [];
        }
        MatFaqComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'mat-faq',
                        template: "\n    <mat-toolbar color=\"primary\">{{title}}</mat-toolbar>\n    <mat-accordion [displayMode]=\"displayMode\" [multi]=\"multi\"\n                   class=\"faq-container\">\n      <mat-expansion-panel *ngFor=\"let faqItem of faqList\">\n        <mat-expansion-panel-header>{{faqItem.question}}</mat-expansion-panel-header>\n        <p>{{faqItem.answer}}</p>\n      </mat-expansion-panel>\n    </mat-accordion>\n  ",
                        styles: ["\n\n  "]
                    },] },
        ];
        MatFaqComponent.propDecorators = {
            title: [{ type: core.Input }],
            multi: [{ type: core.Input }],
            displayMode: [{ type: core.Input }],
            faqList: [{ type: core.Input }]
        };
        return MatFaqComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatFaqModule = /** @class */ (function () {
        function MatFaqModule() {
        }
        /**
         * @return {?}
         */
        MatFaqModule.forRoot = /**
         * @return {?}
         */
        function () {
            return {
                ngModule: MatFaqModule,
                providers: []
            };
        };
        MatFaqModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            forms.FormsModule,
                            forms.ReactiveFormsModule,
                            flexLayout.FlexLayoutModule,
                            material.MatCardModule,
                            material.MatToolbarModule,
                            material.MatButtonModule,
                            material.MatInputModule,
                            material.MatIconModule,
                            material.MatExpansionModule
                        ],
                        exports: [
                            MatFaqAdminComponent,
                            MatFaqComponent
                        ],
                        declarations: [MatFaqAdminComponent, MatFaqComponent]
                    },] },
        ];
        return MatFaqModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MatFaqAdminComponent = MatFaqAdminComponent;
    exports.MatFaqComponent = MatFaqComponent;
    exports.MatFaqModule = MatFaqModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=faq.umd.js.map
