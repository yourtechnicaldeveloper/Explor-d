{"version":3,"file":"sidebar.component.d.ts","sources":["sidebar.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { OnInit, OnDestroy, ElementRef, OnChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NbBooleanInput } from '../helpers';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbSidebarService } from './sidebar.service';\n/**\n * Sidebar header container.\n *\n * Placeholder which contains a sidebar header content,\n * placed at the very top of the sidebar outside of the scroll area.\n */\nexport declare class NbSidebarHeaderComponent {\n}\n/**\n * Sidebar footer container.\n *\n * Placeholder which contains a sidebar footer content,\n * placed at the very bottom of the sidebar outside of the scroll area.\n */\nexport declare class NbSidebarFooterComponent {\n}\n/**\n * Layout sidebar component.\n *\n * @stacked-example(Showcase, sidebar/sidebar-showcase.component)\n *\n * ### Installation\n *\n * Import `NbSidebarModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSidebarModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbSidebarModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSidebarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Sidebar can be placed on the left or the right side of the layout,\n * or on start/end position of layout (depends on document direction, left to right or right to left)\n * It can be fixed (shown above the content) or can push the layout when opened.\n *\n * There are three states - `expanded`, `collapsed`, `compacted`.\n * By default sidebar content is fixed and saves its position while the page is being scrolled.\n *\n * Compacted sidebar example:\n * @stacked-example(Compacted Sidebar, sidebar/sidebar-compacted.component)\n *\n * Sidebar also supports a `responsive` behavior, listening to window size change and changing its size respectably.\n *\n * In a pair with header it is possible to setup a configuration when header is placed on a side of the sidebar\n * and not on top of it. To achieve this simply put a `subheader` property to the header like this:\n * ```html\n * <nb-layout-header subheader></nb-layout-header>\n * ```\n * @stacked-example(Subheader, layout/layout-sidebar-subheader.component)\n * Note that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n *\n * @additional-example(Right Sidebar, sidebar/sidebar-right.component)\n * @additional-example(Fixed Sidebar, sidebar/sidebar-fixed.component)\n *\n * @styles\n *\n * sidebar-background-color:\n * sidebar-text-color:\n * sidebar-text-font-family:\n * sidebar-text-font-size:\n * sidebar-text-font-weight:\n * sidebar-text-line-height:\n * sidebar-height:\n * sidebar-width:\n * sidebar-width-compact:\n * sidebar-padding:\n * sidebar-header-height:\n * sidebar-footer-height:\n * sidebar-shadow:\n * sidebar-menu-item-highlight-color:\n * sidebar-scrollbar-background-color:\n * sidebar-scrollbar-color:\n * sidebar-scrollbar-width:\n */\nexport declare class NbSidebarComponent implements OnChanges, OnInit, OnDestroy {\n    private sidebarService;\n    private themeService;\n    private element;\n    static readonly STATE_EXPANDED: string;\n    static readonly STATE_COLLAPSED: string;\n    static readonly STATE_COMPACTED: string;\n    static readonly RESPONSIVE_STATE_MOBILE: string;\n    static readonly RESPONSIVE_STATE_TABLET: string;\n    static readonly RESPONSIVE_STATE_PC: string;\n    protected stateValue: string;\n    protected responsiveValue: boolean;\n    private destroy$;\n    containerFixedValue: boolean;\n    fixedValue: boolean;\n    rightValue: boolean;\n    leftValue: boolean;\n    startValue: boolean;\n    endValue: boolean;\n    get expanded(): boolean;\n    get collapsed(): boolean;\n    get compacted(): boolean;\n    /**\n     * Places sidebar on the right side\n     * @type {boolean}\n     */\n    set right(val: boolean);\n    static ngAcceptInputType_right: NbBooleanInput;\n    /**\n     * Places sidebar on the left side\n     * @type {boolean}\n     */\n    set left(val: boolean);\n    static ngAcceptInputType_left: NbBooleanInput;\n    /**\n     * Places sidebar on the start edge of layout\n     * @type {boolean}\n     */\n    set start(val: boolean);\n    static ngAcceptInputType_start: NbBooleanInput;\n    /**\n     * Places sidebar on the end edge of layout\n     * @type {boolean}\n     */\n    set end(val: boolean);\n    static ngAcceptInputType_end: NbBooleanInput;\n    /**\n     * Makes sidebar fixed (shown above the layout content)\n     * @type {boolean}\n     */\n    set fixed(val: boolean);\n    static ngAcceptInputType_fixed: NbBooleanInput;\n    /**\n     * Makes sidebar container fixed\n     * @type {boolean}\n     */\n    set containerFixed(val: boolean);\n    static ngAcceptInputType_containerFixed: NbBooleanInput;\n    /**\n     * Initial sidebar state, `expanded`|`collapsed`|`compacted`\n     * @type {string}\n     */\n    set state(val: string);\n    /**\n     * Makes sidebar listen to media query events and change its behaviour\n     * @type {boolean}\n     */\n    set responsive(val: boolean);\n    static ngAcceptInputType_responsive: NbBooleanInput;\n    /**\n     * Tags a sidebar with some ID, can be later used in the sidebar service\n     * to determine which sidebar triggered the action, if multiple sidebars exist on the page.\n     *\n     * @type {string}\n     */\n    tag: string;\n    /**\n     * Controls on which screen sizes sidebar should be switched to compacted state.\n     * Works only when responsive mode is on.\n     * Default values are `['xs', 'is', 'sm', 'md', 'lg']`.\n     *\n     * @type string[]\n     */\n    compactedBreakpoints: string[];\n    /**\n     * Controls on which screen sizes sidebar should be switched to collapsed state.\n     * Works only when responsive mode is on.\n     * Default values are `['xs', 'is']`.\n     *\n     * @type string[]\n     */\n    collapsedBreakpoints: string[];\n    private mediaQuerySubscription;\n    private responsiveState;\n    constructor(sidebarService: NbSidebarService, themeService: NbThemeService, element: ElementRef);\n    toggleResponsive(enabled: boolean): void;\n    ngOnChanges(changes: any): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onClick(event: any): void;\n    /**\n     * Collapses the sidebar\n     */\n    collapse(): void;\n    /**\n     * Expands the sidebar\n     */\n    expand(): void;\n    /**\n     * Compacts the sidebar (minimizes)\n     */\n    compact(): void;\n    /**\n     * Toggles sidebar state (expanded|collapsed|compacted)\n     * @param {boolean} compact If true, then sidebar state will be changed between expanded & compacted,\n     * otherwise - between expanded & collapsed. False by default.\n     *\n     * Toggle sidebar state\n     *\n     * ```ts\n     * this.sidebar.toggle(true);\n     * ```\n     */\n    toggle(compact?: boolean): void;\n    protected onMediaQueryChanges(): Subscription;\n    protected responsiveEnabled(): boolean;\n    protected getMenuLink(element: HTMLElement): HTMLElement | undefined;\n}\n"]}