{"version":3,"file":"tree-grid-def.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tree-grid/tree-grid-def.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, IterableDiffers, TemplateRef } from '@angular/core';\nimport {\n  NbCdkCellDef,\n  NbCdkFooterCellDef,\n  NbCdkFooterRowDef,\n  NbCdkHeaderCellDef,\n  NbCdkHeaderRowDef,\n  NbCdkRowDef,\n} from '../cdk/table/type-mappings';\nimport { NbCellDefDirective, NbFooterCellDefDirective, NbHeaderCellDefDirective } from '../cdk/table/cell';\nimport { NbFooterRowDefDirective, NbHeaderRowDefDirective, NbRowDefDirective } from '../cdk/table/row';\nimport { NbColumnsService } from './tree-grid-columns.service';\n\nexport interface NbTreeGridResponsiveRowDef {\n  hideColumn(column: string);\n  showColumn(column: string);\n}\n\n/**\n * Data row definition for the tree-grid.\n * Captures the header row's template and columns to display.\n */\n@Directive({\n  selector: '[nbTreeGridRowDef]',\n  providers: [{ provide: NbCdkRowDef, useExisting: NbTreeGridRowDefDirective }],\n})\nexport class NbTreeGridRowDefDirective<T> extends NbRowDefDirective<T> implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridRowDefColumns')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n@Directive({\n  selector: '[nbTreeGridHeaderRowDef]',\n  providers: [{ provide: NbCdkHeaderRowDef, useExisting: NbTreeGridHeaderRowDefDirective }],\n})\nexport class NbTreeGridHeaderRowDefDirective extends NbHeaderRowDefDirective implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridHeaderRowDef')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n@Directive({\n  selector: '[nbTreeGridFooterRowDef]',\n  providers: [{ provide: NbCdkFooterRowDef, useExisting: NbTreeGridFooterRowDefDirective }],\n})\nexport class NbTreeGridFooterRowDefDirective extends NbFooterRowDefDirective implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridFooterRowDef')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n/**\n * Cell definition for a nb-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridCellDef]',\n  providers: [{ provide: NbCdkCellDef, useExisting: NbTreeGridCellDefDirective }],\n})\nexport class NbTreeGridCellDefDirective extends NbCellDefDirective {}\n\n/**\n * Header cell definition for the nb-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridHeaderCellDef]',\n  providers: [{ provide: NbCdkHeaderCellDef, useExisting: NbTreeGridHeaderCellDefDirective }],\n})\nexport class NbTreeGridHeaderCellDefDirective extends NbHeaderCellDefDirective {}\n\n/**\n * Footer cell definition for the nb-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridFooterCellDef]',\n  providers: [{ provide: NbCdkFooterCellDef, useExisting: NbTreeGridFooterCellDefDirective }],\n})\nexport class NbTreeGridFooterCellDefDirective extends NbFooterCellDefDirective {}\n"]}