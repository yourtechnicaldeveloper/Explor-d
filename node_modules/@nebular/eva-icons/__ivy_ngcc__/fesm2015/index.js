import { NgModule } from '@angular/core';
import { NbIconLibraries, NbSvgIcon } from '@nebular/theme';
import { icons } from 'eva-icons';

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@nebular/theme';
class NbEvaSvgIcon extends NbSvgIcon {
    constructor(name, content) {
        super(name, '');
        this.name = name;
        this.content = content;
    }
    getContent(options) {
        return this.content.toSvg(Object.assign({ width: '100%', height: '100%', fill: 'currentColor' }, options));
    }
}
class NbEvaIconsModule {
    constructor(iconLibrary) {
        this.NAME = 'eva';
        iconLibrary.registerSvgPack(this.NAME, this.createIcons());
        iconLibrary.setDefaultPack(this.NAME);
    }
    createIcons() {
        return Object
            .entries(icons)
            .map(([name, icon]) => {
            return [name, new NbEvaSvgIcon(name, icon)];
        })
            .reduce((newIcons, [name, icon]) => {
            newIcons[name] = icon;
            return newIcons;
        }, {});
    }
}
NbEvaIconsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NbEvaIconsModule });
NbEvaIconsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NbEvaIconsModule_Factory(t) { return new (t || NbEvaIconsModule)(ɵngcc0.ɵɵinject(ɵngcc1.NbIconLibraries)); } });
NbEvaIconsModule.ctorParameters = () => [
    { type: NbIconLibraries }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NbEvaIconsModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: ɵngcc1.NbIconLibraries }]; }, null); })();

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NbEvaSvgIcon, NbEvaIconsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O29MQUdFO0FBQ0Y7QUFDQTtBQUNBOzs7O2dGQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iSWNvbkxpYnJhcmllcywgTmJTdmdJY29uIH0gZnJvbSAnQG5lYnVsYXIvdGhlbWUnO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tICdldmEtaWNvbnMnO1xuXG4vKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmNsYXNzIE5iRXZhU3ZnSWNvbiBleHRlbmRzIE5iU3ZnSWNvbiB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29udGVudCkge1xuICAgICAgICBzdXBlcihuYW1lLCAnJyk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7XG4gICAgfVxuICAgIGdldENvbnRlbnQob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50LnRvU3ZnKE9iamVjdC5hc3NpZ24oeyB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICcxMDAlJywgZmlsbDogJ2N1cnJlbnRDb2xvcicgfSwgb3B0aW9ucykpO1xuICAgIH1cbn1cbmNsYXNzIE5iRXZhSWNvbnNNb2R1bGUge1xuICAgIGNvbnN0cnVjdG9yKGljb25MaWJyYXJ5KSB7XG4gICAgICAgIHRoaXMuTkFNRSA9ICdldmEnO1xuICAgICAgICBpY29uTGlicmFyeS5yZWdpc3RlclN2Z1BhY2sodGhpcy5OQU1FLCB0aGlzLmNyZWF0ZUljb25zKCkpO1xuICAgICAgICBpY29uTGlicmFyeS5zZXREZWZhdWx0UGFjayh0aGlzLk5BTUUpO1xuICAgIH1cbiAgICBjcmVhdGVJY29ucygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdFxuICAgICAgICAgICAgLmVudHJpZXMoaWNvbnMpXG4gICAgICAgICAgICAubWFwKChbbmFtZSwgaWNvbl0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBbbmFtZSwgbmV3IE5iRXZhU3ZnSWNvbihuYW1lLCBpY29uKV07XG4gICAgICAgIH0pXG4gICAgICAgICAgICAucmVkdWNlKChuZXdJY29ucywgW25hbWUsIGljb25dKSA9PiB7XG4gICAgICAgICAgICBuZXdJY29uc1tuYW1lXSA9IGljb247XG4gICAgICAgICAgICByZXR1cm4gbmV3SWNvbnM7XG4gICAgICAgIH0sIHt9KTtcbiAgICB9XG59XG5OYkV2YUljb25zTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBOZ01vZHVsZSwgYXJnczogW3t9LF0gfVxuXTtcbk5iRXZhSWNvbnNNb2R1bGUuY3RvclBhcmFtZXRlcnMgPSAoKSA9PiBbXG4gICAgeyB0eXBlOiBOYkljb25MaWJyYXJpZXMgfVxuXTtcblxuLypcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5cbi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0IHsgTmJFdmFTdmdJY29uLCBOYkV2YUljb25zTW9kdWxlIH07XG4iXX0=