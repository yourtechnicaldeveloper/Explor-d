{"version":3,"file":"ej2-angular-base.umd.min.js","sources":["../src/util.js","../src/template.js","../src/complex-array-base.js","../src/component-base.js","../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.isFormBase) {\n                derivedClass.prototype[name] = baseClass.prototype[name];\n            }\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        /* istanbul ignore next */\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index && index.length) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                    var rt = _c[_b];\n                    if (!rt.destroyed) {\n                        if (rt._view) {\n                            var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                            if (!isNullOrUndefined(pNode)) {\n                                for (var m = 0; m < rt.rootNodes.length; m++) {\n                                    pNode.appendChild(rt.rootNodes[m]);\n                                }\n                            }\n                        }\n                        rt.destroy();\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            /* istanbul ignore next */\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    /* istanbul ignore next */\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            viewRef.markForCheck();\n            /* istanbul ignore next */\n            var viewCollection = (component && component.registeredTemplate) ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = (propName && component.registeredTemplate) ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.dataSource = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n        // Angular 9 compatibility to overcome ngOnchange not get triggered issue\n        // To Update properties to \"this.propCollection\"\n        var propList = Object.keys(this);\n        /* istanbul ignore next */\n        if (this.directivePropList) {\n            for (var k = 0; k < this.directivePropList.length; k++) {\n                var dirPropName = this.directivePropList[k];\n                if (propList.indexOf(dirPropName) !== -1) {\n                    setValue(dirPropName, getValue(dirPropName, this), this.propCollection);\n                }\n            }\n            this.hasChanges = true;\n        }\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.isUpdated = false;\n        this.hasChanges = true;\n    };\n    /* istanbul ignore next */\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        if (!isNullOrUndefined(this.propCollection[this.property])) {\n            var tempProps = this.propCollection[this.property];\n            var props = Object.keys(tempProps[0]);\n            for (var d = 0; d < props.length; d++) {\n                if (!isNullOrUndefined(this.propCollection[props[d]])) {\n                    var val = getValue(props[d], this);\n                    var propVal = this.propCollection[this.property][0][props[d]];\n                    if (!isNullOrUndefined(val) && this.propCollection[props[d]] !== val\n                        && propVal !== val) {\n                        this.propCollection[this.property][0][props[d]] = val;\n                        this.propCollection[props[d]] = val;\n                        this.hasChanges = true;\n                        this.isUpdated = false;\n                    }\n                }\n            }\n        }\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result || this.hasChanges;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        // For angular 9 compatibility\n        // ngOnchange hook not get triggered for copmplex directive\n        // Due to this, we have manually set template properties v alues once we get template property reference\n        for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {\n            var tempName = templateProperties_2[_i];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        /* istanbul ignore next */\n        if (this.isUpdated) {\n            this.hasChanges = false;\n        }\n    };\n    ComplexBase.prototype.ngOnDestroy = function () {\n        /* istanbul ignore next */\n        this.directivePropList = [];\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        /* istanbul ignore next */\n        this.list = this.children.map(function (child) {\n            child.dirIndex = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        var isSourceChanged = false;\n        // tslint:disable-next-line\n        var childrenDataSource = this.children.map(function (child) {\n            return child;\n        });\n        /* istanbul ignore next */\n        if (this.list.length === this.children.length) {\n            for (var i = 0; i < this.list.length; i++) {\n                if (this.list[i].propCollection.dataSource) {\n                    if (this.list[i].dataSource && this.list[i].propCollection.dataSource !== this.list[i].dataSource) {\n                        this.list[i].propCollection.dataSource = this.list[i].dataSource;\n                        this.list[i].hasChanges = true;\n                    }\n                    isSourceChanged = (JSON.stringify(this.list[i].propCollection.dataSource) !==\n                        JSON.stringify(childrenDataSource[i].propCollection.dataSource));\n                }\n            }\n        }\n        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.dirIndex = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        /* istanbul ignore end */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        for (var i = 0; i < this.list.length; i++) {\n            this.list[i].isUpdated = true;\n        }\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    ArrayBase.prototype.ngOnDestroy = function () {\n        this.list = [];\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n        this.isFormInit = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnThis = isTempRef || this;\n        tempOnThis.registeredTemplate = {};\n        tempOnThis.ngBoundedEvents = {};\n        tempOnThis.isAngular = true;\n        tempOnThis.isFormInit = true;\n        /* istanbul ignore next */\n        if (isTempRef) {\n            this.tags = isTempRef.tags;\n        }\n        tempOnThis.tags = this.tags || [];\n        tempOnThis.complexTemplate = this.complexTemplate || [];\n        tempOnThis.tagObjects = [];\n        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);\n        /* istanbul ignore next */\n        tempOnThis.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (tempOnThis.ngAttr !== undefined) {\n                ele.setAttribute(tempOnThis.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),\n                name: tag\n            };\n            tempOnThis.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(tempOnThis);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, tempOnThis), val);\n            tempOnThis.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            /* istanbul ignore next */\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterViewThis = isTempRef || this;\n        var regExp = /ejs-tab|ejs-accordion/g;\n        /* istanbul ignore next */\n        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {\n            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';\n        }\n        /**\n         * Root level template properties are not getting rendered,\n         * Due to ngonchanges not get triggered.\n         * so that we have set template value for root level template properties,\n         * for example: refer below syntax\n         * ```html\n         * <ejs-grid>\n         * <e-column></e-column>\n         * <ng-template #editSettingsTemplate></ng-template>\n         * </ejs-grid>\n         * ```\n         */\n        var templateProperties = Object.keys(tempAfterViewThis);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _i = 0, templateProperties_1 = templateProperties; _i < templateProperties_1.length; _i++) {\n            var tempName = templateProperties_1[_i];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName + 'Ref', tempAfterViewThis), tempAfterViewThis);\n        }\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                tempAfterViewThis.appendTo(tempAfterViewThis.element);\n                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';\n            }\n        });\n    };\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnDestroyThis = isTempRef || this;\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && tempOnDestroyThis.element.classList.contains('e-control')) {\n            tempOnDestroyThis.destroy();\n            tempOnDestroyThis.clearTemplate(null);\n            // removing bounded events and tagobjects from component after destroy\n            tempOnDestroyThis.ngBoundedEvents = {};\n            tempOnDestroyThis.tagObjects = {};\n        }\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterContentThis = isTempRef || this;\n        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    // For angular 9 compatibility\n                    // Not able to get complex directive properties reference ni Onint hook\n                    // So we have constructed property here and used\n                    var complexDirProps = void 0;\n                    var list = getValue('instance.list', tagObject);\n                    tagObject.instance.moduleName = tempAfterContentThis.getModuleName();\n                    if (list && list.length) {\n                        complexDirProps = list[0].directivePropList;\n                    }\n                    var skip = true;\n                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {\n                        skip = false;\n                    }\n                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {\n                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);\n                        for (var h = 0; h < tagObject.instance.list.length; h++) {\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];\n                            var obj = {};\n                            for (var k = 0; k < compDirPropList.length; k++) {\n                                var complexPropName = compDirPropList[k];\n                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];\n                            }\n                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {\n                                var tag = tagObject.instance.list[h].tags[i];\n                                var childObj = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);\n                                if (childObj) {\n                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];\n                                    if (innerchildObj) {\n                                        for (var j = 0; j < innerchildObj.list.length; j++) {\n                                            var innerTag = innerchildObj.list[0].tags[0];\n                                            if (innerTag) {\n                                                var innerchildTag = getValue('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);\n                                                if (innerchildTag) {\n                                                    innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });\n                                                }\n                                            }\n                                        }\n                                    }\n                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });\n                                }\n                            }\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);\n                        }\n                    }\n                    // End angular 9 compatibility\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    /* istanbul ignore next */\n                    var oldProbLength = tempAfterContentThis[tagObject.name].length;\n                    var newPropLendgth = tagObject.instance.list.length;\n                    if (oldProbLength !== newPropLendgth) {\n                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;\n                    }\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        var curIndex = tagObject.instance.list.indexOf(list);\n                        var curChild = getValue(tagObject.name, tempAfterContentThis)[curIndex];\n                        if (curChild !== undefined && curChild.setProperties !== undefined) {\n                            if (tempAfterContentThis.getModuleName() === 'DashboardLayout') {\n                                curChild.setProperties(list.getProperties(), true);\n                            }\n                            else {\n                                curChild.setProperties(list.getProperties());\n                            }\n                        }\n                        list.isUpdated = true;\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n        /* istanbul ignore else  */\n        if (success) {\n            success.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined, isObject } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        //tslint:disable-next-line\n        var value = (e.checked === undefined ? e.value : e.checked);\n        this.objCheck = isObject(value);\n        if (this.isUpdated === true) {\n            this.angularValue = this.oldValue;\n        }\n        if (this.objCheck === true) {\n            this.duplicateValue = JSON.stringify(value);\n            this.duplicateAngularValue = JSON.stringify(this.angularValue);\n            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {\n                // Update angular from our control\n                this.propagateChange(value);\n                this.angularValue = value;\n            }\n        }\n        else {\n            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only\n                if (value !== '' && value !== null) {\n                    // Update angular from our control\n                    this.propagateChange(value);\n                    this.angularValue = value;\n                }\n                else {\n                    //tslint:disable-next-line\n                    var optionalValue = value;\n                    this.propagateChange(optionalValue);\n                    this.angularValue = value;\n                }\n            }\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = this.oldValue || getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    // tslint:disable-next-line:no-any\n    FormBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempFormAfterViewThis = isTempRef || this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler\n        // setTimeout(() => {\n        /* istanbul ignore else */\n        if (typeof window !== 'undefined') {\n            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);\n            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;\n            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));\n            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));\n        }\n        this.isFormInit = false;\n        // });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n        this.disabled = disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        var regExp = /ejs-radiobutton/g;\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            // To resolve boolean type formControl value is not working for radio button control.\n            /* istanbul ignore next */\n            if (typeof value === 'boolean') {\n                if (this.ngEle && regExp.test(this.ngEle.nativeElement.outerHTML)) {\n                    this.checked = value === this.value;\n                }\n                else {\n                    this.checked = value;\n                }\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        this.angularValue = value;\n        this.isUpdated = true;\n        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.\n        // To prevent change event, trigger change in component side based on `preventChange` value\n        this.preventChange = this.isFormInit ? false : true;\n        if (value === null) {\n            return;\n        }\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    FormBase.isFormBase = true;\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","hasOwnProperty","isFormBase","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","_view","pNode","renderer","parentNode","isNullOrUndefined","appendChild","_loop_1","tagObject","instance","RegExp","_d","_e","tagObjects","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","markForCheck","viewCollection","getValue","push","ComplexBase","this","hasChanges","dataSource","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","replace","setValue","propList","directivePropList","k","dirPropName","indexOf","ngOnChanges","changes","changedVal","currentValue","isUpdated","getProperties","isChanged","result","property","tempProps","props","d","propVal","item","ngAfterContentChecked","templateProperties_2","ej2Base","ngAfterViewChecked","ngOnDestroy","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","children","map","child","dirIndex","onlyProp","isSourceChanged","childrenDataSource","i","JSON","stringify","hasNewChildren","ngAfterViewInit","ComponentBase","isProtectedOnChange","isFormInit","saveChanges","key","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","dataBind","bind","clearTimeout","isTempRef","tempOnThis","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","undefined","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","tempAfterViewThis","ngEle","outerHTML","style","visibility","window","appendTo","tempOnDestroyThis","classList","contains","tempAfterContentThis","isUndefined","propObj","complexDirProps","moduleName","getModuleName","skip","compDirPropList","h","complexPropName","childObj","innerchildObj","j","innerTag","innerchildTag","curIndex","curChild","twoWaySetter","newVal","oldVal","properties","emit","addTwoWay","this_1","defineProperty","get","set","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","success","prevDetection","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","value","checked","objCheck","isObject","angularValue","duplicateValue","duplicateAngularValue","optionalValue","registerOnChange","registerFunction","registerOnTouched","inputElement","tempFormAfterViewThis","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","preventChange","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine","nameSpace","object","split","fromObj","defaultValue","target","propertyDescriptor","setter","getter","enumerable","configurable"],"mappings":"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"}