import { ElementRef } from '@angular/core';
import { Track } from '../../model/track.model';
import { MatSlider } from '@angular/material/slider';
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
import { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class AudioPlayerComponent {
    audioPlayerService: AudioPlayerService;
    constructor(elem: ElementRef);
    playlist: Track[];
    matPaginator: MatPaginator;
    displayedColumns: string[];
    dataSource: MatTableDataSource<Track>;
    paginator: MatPaginator;
    timeLineDuration: MatSlider;
    tracks: Track[];
    displayTitle: boolean;
    displayPlaylist: boolean;
    displayVolumeControls: boolean;
    pageSizeOptions: number[];
    expanded: boolean;
    autoPlay: boolean;
    disablePositionSlider: boolean;
    tableHeader: string;
    columnHeader: string;
    currentIndex: number;
    trackEnded: Subject<string>;
    player: ElementRef;
    iOS: boolean;
    loaderDisplay: boolean;
    isPlaying: boolean;
    currentTime: number;
    volume: number;
    duration: number;
    private startOffsetValue;
    startOffset: number;
    endOffset: number;
    currTimePosChanged(event: any): void;
    bindPlayerEvent(): void;
    playBtnHandler(): void;
    play(track?: Track): void;
    toggleVolume(): void;
    private setVolume;
    ngOnInit(): void;
    initialize(): void;
    setDataSourceAttributes(): void;
    nextSong(): void;
    previousSong(): void;
    resetSong(): void;
    selectTrack(index: number): void;
    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean;
    updateCurrentTrack(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AudioPlayerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AudioPlayerComponent, "mat-advanced-audio-player,ngx-audio-player", never, { "displayTitle": "displayTitle"; "displayPlaylist": "displayPlaylist"; "displayVolumeControls": "displayVolumeControls"; "pageSizeOptions": "pageSizeOptions"; "expanded": "expanded"; "autoPlay": "autoPlay"; "disablePositionSlider": "disablePositionSlider"; "tableHeader": "tableHeader"; "columnHeader": "columnHeader"; "endOffset": "endOffset"; "playlist": "playlist"; "startOffset": "startOffset"; }, { "trackEnded": "trackEnded"; }, never, never>;
}

//# sourceMappingURL=ngx-audio-player.component.d.ts.map