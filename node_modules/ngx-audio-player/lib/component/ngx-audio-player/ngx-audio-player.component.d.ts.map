{"version":3,"file":"ngx-audio-player.component.d.ts","sources":["ngx-audio-player.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Track } from '../../model/track.model';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Subject } from 'rxjs';\nexport declare class AudioPlayerComponent implements OnInit, OnChanges {\n    audioPlayerService: AudioPlayerService;\n    constructor(elem: ElementRef);\n    playlist: Track[];\n    matPaginator: MatPaginator;\n    displayedColumns: string[];\n    dataSource: MatTableDataSource<Track>;\n    paginator: MatPaginator;\n    timeLineDuration: MatSlider;\n    tracks: Track[];\n    displayTitle: boolean;\n    displayPlaylist: boolean;\n    displayVolumeControls: boolean;\n    pageSizeOptions: number[];\n    expanded: boolean;\n    autoPlay: boolean;\n    disablePositionSlider: boolean;\n    displayArtist: boolean;\n    displayDuration: boolean;\n    tableHeader: string;\n    titleHeader: string;\n    artistHeader: string;\n    durationHeader: string;\n    currentIndex: number;\n    trackEnded: Subject<string>;\n    player: ElementRef;\n    iOS: boolean;\n    loaderDisplay: boolean;\n    isPlaying: boolean;\n    currentTime: number;\n    volume: number;\n    duration: number;\n    private startOffsetValue;\n    startOffset: number;\n    endOffset: number;\n    currTimePosChanged(event: any): void;\n    bindPlayerEvent(): void;\n    playBtnHandler(): void;\n    play(track?: Track): void;\n    toggleVolume(): void;\n    private setVolume;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private buildDisplayedColumns;\n    initialize(): void;\n    setDataSourceAttributes(): void;\n    nextSong(): void;\n    previousSong(): void;\n    resetSong(): void;\n    selectTrack(index: number): void;\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean;\n    updateCurrentTrack(): void;\n}\n"]}