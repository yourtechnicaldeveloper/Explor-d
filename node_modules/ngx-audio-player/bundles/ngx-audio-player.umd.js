(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/table'), require('@angular/material/paginator'), require('rxjs'), require('@angular/material/slider'), require('@angular/material/form-field'), require('@angular/material/expansion'), require('@angular/material/card'), require('@angular/material/button'), require('@angular/common'), require('@angular/forms'), require('@angular/material/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-audio-player', ['exports', '@angular/core', '@angular/material/table', '@angular/material/paginator', 'rxjs', '@angular/material/slider', '@angular/material/form-field', '@angular/material/expansion', '@angular/material/card', '@angular/material/button', '@angular/common', '@angular/forms', '@angular/material/icon'], factory) :
    (global = global || self, factory(global['ngx-audio-player'] = {}, global.ng.core, global.ng.material.table, global.ng.material.paginator, global.rxjs, global.ng.material.slider, global.ng.material['form-field'], global.ng.material.expansion, global.ng.material.card, global.ng.material.button, global.ng.common, global.ng.forms, global.ng.material.icon));
}(this, (function (exports, core, table, paginator, rxjs, slider, formField, expansion, card, button, common, forms, icon) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var AudioPlayerService = /** @class */ (function () {
        function AudioPlayerService() {
            // Dynamic update of playlist
            this.tracks = [];
            this.playlistSubject$ = new rxjs.BehaviorSubject(this.tracks);
            // Get the current track
            this.currentTrack = null;
            this.currentTrackSubject$ = new rxjs.BehaviorSubject(this.currentTrack);
            // Get the current time
            this.currentTime = null;
            this.currentTimeSubject$ = new rxjs.BehaviorSubject(this.currentTime);
        }
        AudioPlayerService.prototype.setPlaylist = function (tracks) {
            this.tracks = tracks;
            this.playlistSubject$.next(this.tracks);
        };
        AudioPlayerService.prototype.getPlaylist = function () {
            return this.playlistSubject$.asObservable();
        };
        AudioPlayerService.prototype.setCurrentTrack = function (currentTrack) {
            this.currentTrack = currentTrack;
            this.currentTrackSubject$.next(this.currentTrack);
        };
        AudioPlayerService.prototype.getCurrentTrack = function () {
            return this.currentTrackSubject$.asObservable();
        };
        AudioPlayerService.prototype.setCurrentTime = function (currentTime) {
            this.currentTime = currentTime;
            this.currentTimeSubject$.next(this.currentTime);
        };
        AudioPlayerService.prototype.getCurrentTime = function () {
            return this.currentTimeSubject$.asObservable();
        };
        AudioPlayerService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function AudioPlayerService_Factory() { return new AudioPlayerService(); }, token: AudioPlayerService, providedIn: "root" });
        AudioPlayerService = __decorate([
            core.Injectable({
                providedIn: 'root',
            })
        ], AudioPlayerService);
        return AudioPlayerService;
    }());

    var AudioPlayerComponent = /** @class */ (function () {
        function AudioPlayerComponent(elem) {
            this.dataSource = new table.MatTableDataSource();
            this.tracks = [];
            this.displayTitle = true;
            this.displayPlaylist = true;
            this.displayVolumeControls = true;
            this.pageSizeOptions = [10, 20, 30];
            this.expanded = true;
            this.autoPlay = false;
            this.disablePositionSlider = false;
            // Support for internationalization
            this.displayArtist = false;
            this.displayDuration = false;
            this.tableHeader = 'Playlist';
            this.titleHeader = 'Title';
            this.artistHeader = 'Artist';
            this.durationHeader = 'Duration';
            this.currentIndex = 0;
            this.trackEnded = new rxjs.Subject();
            this.iOS = (/iPad|iPhone|iPod/.test(navigator.platform)
                || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1));
            this.loaderDisplay = false;
            this.isPlaying = false;
            this.currentTime = 0;
            this.volume = 0.1;
            this.duration = 0.01;
            this.startOffsetValue = 0;
            this.endOffset = 0;
            if (elem.nativeElement.tagName.toLowerCase() === 'mat-advanced-audio-player') {
                console.warn("'mat-advanced-audio-player' selector is deprecated; use 'ngx-audio-player' instead.");
            }
            this.audioPlayerService = new AudioPlayerService();
        }
        Object.defineProperty(AudioPlayerComponent.prototype, "playlist", {
            set: function (playlist) {
                this.audioPlayerService.setPlaylist(playlist);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AudioPlayerComponent.prototype, "matPaginator", {
            set: function (mp) {
                this.paginator = mp;
                this.setDataSourceAttributes();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AudioPlayerComponent.prototype, "startOffset", {
            get: function () {
                return this.startOffsetValue;
            },
            set: function (seconds) {
                this.startOffsetValue = seconds;
                this.player.nativeElement.currentTime = seconds;
            },
            enumerable: true,
            configurable: true
        });
        AudioPlayerComponent.prototype.currTimePosChanged = function (event) {
            this.player.nativeElement.currentTime = event.value;
        };
        AudioPlayerComponent.prototype.bindPlayerEvent = function () {
            var _this = this;
            this.player.nativeElement.addEventListener('playing', function () {
                _this.isPlaying = true;
                _this.duration = Math.floor(_this.player.nativeElement.duration);
            });
            this.player.nativeElement.addEventListener('pause', function () {
                _this.isPlaying = false;
            });
            this.player.nativeElement.addEventListener('timeupdate', function () {
                _this.currentTime = Math.floor(_this.player.nativeElement.currentTime);
                // BUG: Commenting for `ended` event not firing #66
                // if (this.currentTime >= this.duration - this.endOffset) {
                //     this.player.nativeElement.pause();
                // }
            });
            this.player.nativeElement.addEventListener('volume', function () {
                _this.volume = Math.floor(_this.player.nativeElement.volume);
            });
            if (!this.iOS) {
                this.player.nativeElement.addEventListener('loadstart', function () {
                    _this.loaderDisplay = true;
                });
            }
            this.player.nativeElement.addEventListener('loadeddata', function () {
                _this.loaderDisplay = false;
                _this.duration = Math.floor(_this.player.nativeElement.duration);
            });
            this.player.nativeElement.addEventListener('ended', function () {
                _this.trackEnded.next('ended');
            });
        };
        AudioPlayerComponent.prototype.playBtnHandler = function () {
            if (this.loaderDisplay) {
                return;
            }
            if (this.player.nativeElement.paused) {
                if (this.currentTime >= this.duration - this.endOffset) {
                    this.player.nativeElement.currentTime = this.startOffset;
                }
                else {
                    this.player.nativeElement.currentTime = this.currentTime;
                }
                this.player.nativeElement.play();
            }
            else {
                this.currentTime = this.player.nativeElement.currentTime;
                this.player.nativeElement.pause();
            }
        };
        AudioPlayerComponent.prototype.play = function (track) {
            var _this = this;
            if (track) {
                this.startOffset = track.startOffset || 0;
                this.endOffset = track.endOffset || 0;
            }
            setTimeout(function () {
                _this.player.nativeElement.play();
            }, 50);
        };
        AudioPlayerComponent.prototype.toggleVolume = function () {
            if (this.volume === 0) {
                this.setVolume(1.0);
            }
            else {
                this.setVolume(0);
            }
        };
        AudioPlayerComponent.prototype.setVolume = function (vol) {
            this.volume = vol;
            this.player.nativeElement.volume = this.volume;
        };
        AudioPlayerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.bindPlayerEvent();
            // auto play next track
            this.player.nativeElement.addEventListener('ended', function () {
                if (_this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
                    _this.nextSong();
                }
            });
            this.player.nativeElement.addEventListener('timeupdate', function () {
                _this.audioPlayerService.setCurrentTime(_this.player.nativeElement.currentTime);
            });
            // Subscribe to playlist observer from AudioPlayerService and
            // update the playlist within MatAdvancedAudioPlayerComponent
            this.audioPlayerService.getPlaylist().subscribe(function (tracks) {
                if (tracks !== null && tracks !== []) {
                    _this.tracks = tracks;
                    _this.initialize();
                }
            });
        };
        AudioPlayerComponent.prototype.ngOnChanges = function (changes) {
            if (changes.hasOwnProperty('displayArtist') || changes.hasOwnProperty('displayDuration')) {
                this.buildDisplayedColumns();
            }
        };
        AudioPlayerComponent.prototype.buildDisplayedColumns = function () {
            this.displayedColumns = ['title'];
            if (this.displayArtist) {
                this.displayedColumns.push('artist');
            }
            if (this.displayDuration) {
                this.displayedColumns.push('duration');
            }
            this.displayedColumns.push('status');
        };
        AudioPlayerComponent.prototype.initialize = function () {
            this.buildDisplayedColumns();
            // populate indexs for the track and configure
            // material table data source and paginator
            this.setDataSourceAttributes();
            this.player.nativeElement.currentTime = this.startOffset;
            this.updateCurrentTrack();
            if (this.autoPlay) {
                this.play();
            }
        };
        AudioPlayerComponent.prototype.setDataSourceAttributes = function () {
            var index = 1;
            if (this.tracks) {
                this.tracks.forEach(function (track) {
                    track.index = index++;
                });
                this.dataSource = new table.MatTableDataSource(this.tracks);
                this.dataSource.paginator = this.paginator;
            }
        };
        AudioPlayerComponent.prototype.nextSong = function () {
            if (this.displayPlaylist === true
                && (((this.currentIndex + 1) % this.paginator.pageSize) === 0
                    || (this.currentIndex + 1) === this.paginator.length)) {
                if (this.paginator.hasNextPage()) {
                    this.paginator.nextPage();
                }
                else if (!this.paginator.hasNextPage()) {
                    this.paginator.firstPage();
                }
            }
            this.currentTime = 0;
            this.duration = 0.01;
            if ((this.currentIndex + 1) >= this.tracks.length) {
                this.currentIndex = 0;
            }
            else {
                this.currentIndex++;
            }
            this.updateCurrentTrack();
            this.play();
        };
        AudioPlayerComponent.prototype.previousSong = function () {
            this.currentTime = 0;
            this.duration = 0.01;
            if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
                if (this.displayPlaylist === true
                    && (((this.currentIndex) % this.paginator.pageSize) === 0
                        || (this.currentIndex === 0))) {
                    if (this.paginator.hasPreviousPage()) {
                        this.paginator.previousPage();
                    }
                    else if (!this.paginator.hasPreviousPage()) {
                        this.paginator.lastPage();
                    }
                }
                if ((this.currentIndex - 1) < 0) {
                    this.currentIndex = (this.tracks.length - 1);
                }
                else {
                    this.currentIndex--;
                }
            }
            else {
                this.resetSong();
            }
            this.updateCurrentTrack();
            this.play();
        };
        AudioPlayerComponent.prototype.resetSong = function () {
            this.player.nativeElement.src = this.tracks[this.currentIndex].link;
        };
        AudioPlayerComponent.prototype.selectTrack = function (index) {
            this.currentIndex = index - 1;
            this.updateCurrentTrack();
            this.play();
        };
        AudioPlayerComponent.prototype.checkIfSongHasStartedSinceAtleastTwoSeconds = function () {
            return this.player.nativeElement.currentTime > 2;
        };
        AudioPlayerComponent.prototype.updateCurrentTrack = function () {
            this.audioPlayerService.setCurrentTrack(this.tracks[this.currentIndex]);
        };
        AudioPlayerComponent.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input(),
            __metadata("design:type", Array),
            __metadata("design:paramtypes", [Array])
        ], AudioPlayerComponent.prototype, "playlist", null);
        __decorate([
            core.ViewChild(paginator.MatPaginator, { static: false }),
            __metadata("design:type", paginator.MatPaginator),
            __metadata("design:paramtypes", [paginator.MatPaginator])
        ], AudioPlayerComponent.prototype, "matPaginator", null);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "displayTitle", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "displayPlaylist", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "displayVolumeControls", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "pageSizeOptions", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "expanded", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "autoPlay", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "disablePositionSlider", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "displayArtist", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "displayDuration", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "tableHeader", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "titleHeader", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "artistHeader", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "durationHeader", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", rxjs.Subject)
        ], AudioPlayerComponent.prototype, "trackEnded", void 0);
        __decorate([
            core.ViewChild('audioPlayer', { static: true }),
            __metadata("design:type", core.ElementRef)
        ], AudioPlayerComponent.prototype, "player", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number),
            __metadata("design:paramtypes", [Number])
        ], AudioPlayerComponent.prototype, "startOffset", null);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], AudioPlayerComponent.prototype, "endOffset", void 0);
        AudioPlayerComponent = __decorate([
            core.Component({
                selector: 'ngx-audio-player',
                template: "<mat-card class=\"ngx-d-flex ngx-justify-content-center ngx-audio-player z-depth-1 mat-elevation-z2\"\n    style=\"margin: 0px;\">\n\n    <audio #audioPlayer [src]=\"tracks[currentIndex]?.link\"></audio>\n\n    <button *ngIf=\"tracks.length > 1\" (click)='previousSong();' [disabled]=\"loaderDisplay\" class=\"ngx-p-1\" mat-button>\n        <mat-icon aria-hidden=\"true\">\n            <!-- Skip previous icon (skip_previous) -->\n            <svg height=\"32\" viewBox=\"0 0 24 24\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 6h2v12H6zm3.5 6l8.5 6V6z\" />\n                <path d=\"M0 0h32v32H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n    </button>\n    <button (click)='playBtnHandler();' [disabled]=\"loaderDisplay\" class=\"ngx-p-1 play-pause\" mat-button>\n\n        <svg *ngIf=\"loaderDisplay\" height=\"34px\" preserveAspectRatio=\"xMidYMid\"\n            style=\"margin: auto; display: block; shape-rendering: auto;\" viewBox=\"0 0 100 100\" width=\"34px\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <g transform=\"rotate(0 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.9166666666666666s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(30 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.8333333333333334s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(60 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.75s\" dur=\"1s\" keyTimes=\"0;1\" repeatCount=\"indefinite\"\n                        values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(90 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.6666666666666666s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(120 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.5833333333333334s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(150 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.5s\" dur=\"1s\" keyTimes=\"0;1\" repeatCount=\"indefinite\"\n                        values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(180 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.4166666666666667s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(210 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.3333333333333333s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(240 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.25s\" dur=\"1s\" keyTimes=\"0;1\" repeatCount=\"indefinite\"\n                        values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(270 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.16666666666666666s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(300 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"-0.08333333333333333s\" dur=\"1s\" keyTimes=\"0;1\"\n                        repeatCount=\"indefinite\" values=\"1;0\" />\n                </rect>\n            </g>\n            <g transform=\"rotate(330 50 50)\">\n                <rect fill=\"#7a7a7a\" height=\"12\" rx=\"3\" ry=\"6\" width=\"6\" x=\"47\" y=\"20\">\n                    <animate attributeName=\"opacity\" begin=\"0s\" dur=\"1s\" keyTimes=\"0;1\" repeatCount=\"indefinite\"\n                        values=\"1;0\" />\n                </rect>\n            </g>\n        </svg>\n\n        <mat-icon *ngIf=\"!loaderDisplay && !isPlaying\" aria-hidden=\"true\" class=\"play-track\">\n            <!-- Play icon (play_arrow) -->\n            <svg height=\"32\" viewBox=\"0 0 24 24\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M8 5v14l11-7z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n        <mat-icon *ngIf=\"!loaderDisplay && isPlaying\" aria-hidden=\"true\" class=\"pause-track\">\n            <!-- Pause icon (pause) -->\n            <svg height=\"32\" viewBox=\"0 0 24 24\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n    </button>\n    <button *ngIf=\"tracks.length > 1\" (click)='nextSong();' [disabled]=\"loaderDisplay\" class=\"ngx-p-1 skip-next\"\n        mat-button>\n        <mat-icon aria-hidden=\"true\" class=\"next-track\">\n            <!-- Skip next icon (skip_next) -->\n            <svg height=\"32\" viewBox=\"0 0 24 24\" width=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n    </button>\n\n    <div class=\"ngx-col\">\n        <div class=\"ngx-d-flex ngx-flex-fill ngx-justify-content-center\">\n            <div class=\"ngx-d-none ngx-d-sm-block ngx-py-3 ngx-px-1\" style=\"font-size: 12px\">\n                <span *ngIf=\"duration !== 0.01\">\n                    {{currentTime | secondsToMinutes}}\n                </span>\n            </div>\n            <mat-slider [disabled]=\"disablePositionSlider\" (change)=\"currTimePosChanged($event)\" [min]=\"startOffset\"\n                class=\"ngx-d-none ngx-d-sm-block ngx-flex-fill ngx-p-1\" max=\"{{duration-endOffset}}\" style=\"width: 100%\"\n                value=\"{{currentTime}}\"></mat-slider>\n            <div class=\"ngx-py-3 ngx-px-1\" style=\"font-size: 12px; text-align: right\">\n                <span *ngIf=\"duration !== 0.01\">\n                    -{{duration-currentTime | secondsToMinutes }}\n                </span>\n            </div>\n        </div>\n    </div>\n    <button (click)='toggleVolume();' *ngIf=\"displayVolumeControls\" class=\"ngx-p-1 volume\" mat-button>\n        <mat-icon *ngIf=\"volume === 0\" aria-hidden=\"true\" class=\"volume-mute\">\n            <!-- Volume mute icon (volume_off) -->\n            <svg height=\"28\" viewBox=\"0 0 24 24\" width=\"28\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n        <mat-icon *ngIf=\"volume > 0\" aria-hidden=\"true\" class=\"volume-up\">\n            <!-- Volume up icon (volume_up) -->\n            <svg height=\"28\" viewBox=\"0 0 24 24\" width=\"28\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mat-icon>\n    </button>\n</mat-card>\n\n<mat-card *ngIf=\"displayTitle\" class=\"mat-elevation-z1\">\n    <div style=\"text-align: center;\">\n        <div style=\"margin: 1px 2px; padding: 1em\">\n            <span\n                *ngIf=\"!isPlaying\">{{ tracks[currentIndex]?.title }}{{  displayArtist && tracks[currentIndex]?.artist ? ' | ' + tracks[currentIndex]?.artist : ''}}</span>\n            <marquee *ngIf=\"isPlaying\" behavior=\"scroll\" direction=\"left\">{{ tracks[currentIndex]?.title\n                }}{{ displayArtist && tracks[currentIndex]?.artist ? ' | ' + tracks[currentIndex]?.artist : ''}}\n            </marquee>\n        </div>\n        <div class=\"clear\"></div>\n    </div>\n</mat-card>\n\n<mat-accordion *ngIf=\"displayPlaylist && tracks.length > 1\">\n    <mat-expansion-panel [expanded]=\"expanded\">\n        <mat-expansion-panel-header>\n            {{tableHeader}}\n        </mat-expansion-panel-header>\n        <table [dataSource]=\"dataSource\" class=\"mat-elevation-z6\" mat-table>\n            <ng-container matColumnDef=\"title\">\n                <th *matHeaderCellDef mat-header-cell>{{titleHeader}}</th>\n                <td (click)=\"selectTrack(element.index)\" *matCellDef=\"let element\" mat-cell>\n                    {{element.title}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"artist\">\n                <th *matHeaderCellDef mat-header-cell>{{artistHeader}}</th>\n                <td (click)=\"selectTrack(element.index)\" *matCellDef=\"let element\" mat-cell>\n                    {{element?.artist ? element?.artist : ''}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"duration\">\n                <th *matHeaderCellDef mat-header-cell>{{durationHeader}}</th>\n                <td (click)=\"selectTrack(element.index)\" *matCellDef=\"let element\" mat-cell>\n                    {{element?.duration ? (element?.duration | secondsToMinutes) : ''}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <th *matHeaderCellDef mat-header-cell></th>\n                <td *matCellDef=\"let element\" mat-cell>\n                    <div *ngIf=\"tracks[currentIndex]?.title === element.title\">\n                        <!-- <mat-icon *ngIf=\"isPlaying\" aria-hidden=\"true\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                        </mat-icon> -->\n                        <mat-icon *ngIf=\"isPlaying\" aria-hidden=\"true\" class=\"currently-playing\">\n                            <!-- Play icon (play_arrow) -->\n                            <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                <path\n                                    d=\"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z\" />\n                            </svg>\n                        </mat-icon>\n                    </div>\n                </td>\n            </ng-container>\n            <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" class=\"mat-select-content\" mat-row></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n    </mat-expansion-panel>\n</mat-accordion>",
                styles: ["mat-card,mat-slider{padding:0!important}button:focus,button:hover{outline:0!important}svg{vertical-align:top}.mat-icon{height:32px!important;width:32px!important}mat-icon>.currently-playing{height:16px!important;width:16px!important}table{width:100%}.ngx-advanced-audio-player{min-width:325px}.material-icons{font-size:16px!important}.play-pause{border-left:1px solid rgba(0,0,0,.1);border-right:1px solid rgba(0,0,0,.1)}.volume{border-left:1px solid rgba(0,0,0,.1)}.skip-next{border-right:1px solid rgba(0,0,0,.1)}*,::after,::before{box-sizing:inherit}.ngx-p-1{padding:.25rem!important}.ngx-col,.ngx-col-1,.ngx-col-10,.ngx-col-11,.ngx-col-12,.ngx-col-2,.ngx-col-3,.ngx-col-4,.ngx-col-5,.ngx-col-6,.ngx-col-7,.ngx-col-8,.ngx-col-9,.ngx-col-auto,.ngx-col-lg,.ngx-col-lg-1,.ngx-col-lg-10,.ngx-col-lg-11,.ngx-col-lg-12,.ngx-col-lg-2,.ngx-col-lg-3,.ngx-col-lg-4,.ngx-col-lg-5,.ngx-col-lg-6,.ngx-col-lg-7,.ngx-col-lg-8,.ngx-col-lg-9,.ngx-col-lg-auto,.ngx-col-md,.ngx-col-md-1,.ngx-col-md-10,.ngx-col-md-11,.ngx-col-md-12,.ngx-col-md-2,.ngx-col-md-3,.ngx-col-md-4,.ngx-col-md-5,.ngx-col-md-6,.ngx-col-md-7,.ngx-col-md-8,.ngx-col-md-9,.ngx-col-md-auto,.ngx-col-sm,.ngx-col-sm-1,.ngx-col-sm-10,.ngx-col-sm-11,.ngx-col-sm-12,.ngx-col-sm-2,.ngx-col-sm-3,.ngx-col-sm-4,.ngx-col-sm-5,.ngx-col-sm-6,.ngx-col-sm-7,.ngx-col-sm-8,.ngx-col-sm-9,.ngx-col-sm-auto,.ngx-col-xl,.ngx-col-xl-1,.ngx-col-xl-10,.ngx-col-xl-11,.ngx-col-xl-12,.ngx-col-xl-2,.ngx-col-xl-3,.ngx-col-xl-4,.ngx-col-xl-5,.ngx-col-xl-6,.ngx-col-xl-7,.ngx-col-xl-8,.ngx-col-xl-9,.ngx-col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.ngx-col{flex-basis:0;flex-grow:1;max-width:100%}.ngx-justify-content-center{justify-content:center!important}.ngx-flex-fill{flex:1 1 auto!important}.ngx-d-flex{display:flex!important}.ngx-pb-3,.ngx-py-3{padding-bottom:1rem!important}.ngx-pt-3,.ngx-py-3{padding-top:1rem!important}.ngx-pl-1,.ngx-px-1{padding-left:.25rem!important}.ngx-pr-1,.ngx-px-1{padding-right:.25rem!important}@media (max-width:720px){.ngx-sm-block{display:block!important}.ngx-d-none{display:none!important}}"]
            }),
            __metadata("design:paramtypes", [core.ElementRef])
        ], AudioPlayerComponent);
        return AudioPlayerComponent;
    }());

    /*
     * Transform seconds to minutes:seconds
     * Example : 270 -> 02:30
    */
    var SecondsToMinutesPipe = /** @class */ (function () {
        function SecondsToMinutesPipe() {
        }
        SecondsToMinutesPipe.prototype.transform = function (time) {
            var hours = ('0' + Math.floor(time / 3600)).slice(-2);
            var minutes = ('0' + Math.floor((time % 3600) / 60)).slice(-2);
            var seconds = ('0' + time % 60).slice(-2);
            if (hours !== '00') {
                return hours + ":" + minutes + ":" + seconds;
            }
            return minutes + ":" + seconds;
        };
        SecondsToMinutesPipe = __decorate([
            core.Pipe({ name: 'secondsToMinutes' })
        ], SecondsToMinutesPipe);
        return SecondsToMinutesPipe;
    }());

    var NgxAudioPlayerModule = /** @class */ (function () {
        function NgxAudioPlayerModule() {
        }
        NgxAudioPlayerModule = __decorate([
            core.NgModule({
                declarations: [SecondsToMinutesPipe, AudioPlayerComponent],
                imports: [common.CommonModule, forms.FormsModule, button.MatButtonModule, card.MatCardModule, table.MatTableModule, formField.MatFormFieldModule,
                    slider.MatSliderModule, expansion.MatExpansionModule, paginator.MatPaginatorModule, icon.MatIconModule],
                exports: [AudioPlayerComponent]
            })
        ], NgxAudioPlayerModule);
        return NgxAudioPlayerModule;
    }());

    var Track = /** @class */ (function () {
        function Track() {
            var _this = this;
            this.toString = function () {
                return "Track (index: " + _this.index + ", title: " + _this.title + ")";
            };
        }
        return Track;
    }());

    exports.AudioPlayerComponent = AudioPlayerComponent;
    exports.NgxAudioPlayerModule = NgxAudioPlayerModule;
    exports.Track = Track;
    exports.ɵa = SecondsToMinutesPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-audio-player.umd.js.map
