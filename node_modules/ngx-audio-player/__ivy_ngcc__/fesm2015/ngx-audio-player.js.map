{"version":3,"file":"ngx-audio-player.js","sources":["ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ngx-audio-player/lib/component/ngx-audio-player/ngx-audio-player.component.ts","ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ngx-audio-player/lib/ngx-audio-player.module.ts","ngx-audio-player/lib/model/track.model.ts","ngx-audio-player/public_api.ts","ngx-audio-player/ngx-audio-player.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioPlayerService {\n\n  // Dynamic update of playlist\n  tracks: Track[] = [];\n  playlistSubject$: BehaviorSubject<Track[]> =\n    new BehaviorSubject<Track[]>(this.tracks);\n\n  // Get the current track\n  currentTrack: Track = null;\n  currentTrackSubject$: BehaviorSubject<Track> =\n    new BehaviorSubject<Track>(this.currentTrack);\n\n  // Get the current time\n  currentTime: any = null;\n  currentTimeSubject$: BehaviorSubject<any> =\n    new BehaviorSubject<any>(this.currentTime);\n\n  setPlaylist(tracks: Track[]) {\n    this.tracks = tracks;\n    this.playlistSubject$.next(this.tracks);\n  }\n\n  getPlaylist(): Observable<Track[]> {\n    return this.playlistSubject$.asObservable();\n  }\n\n  setCurrentTrack(currentTrack: Track) {\n    this.currentTrack = currentTrack;\n    this.currentTrackSubject$.next(this.currentTrack);\n  }\n\n  getCurrentTrack(): Observable<Track> {\n    return this.currentTrackSubject$.asObservable();\n  }\n\n  setCurrentTime(currentTime: any) {\n    this.currentTime = currentTime;\n    this.currentTimeSubject$.next(this.currentTime);\n  }\n\n  getCurrentTime(): Observable<any> {\n    return this.currentTimeSubject$.asObservable();\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, Output, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Track } from '../../model/track.model';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'ngx-audio-player',\n    templateUrl: './ngx-audio-player.component.html',\n    styleUrls: ['./ngx-audio-player.component.css']\n})\nexport class AudioPlayerComponent implements OnInit, OnChanges {\n\n    audioPlayerService: AudioPlayerService;\n    constructor(elem: ElementRef) {\n        if (elem.nativeElement.tagName.toLowerCase() === 'mat-advanced-audio-player') {\n            console.warn(`'mat-advanced-audio-player' selector is deprecated; use 'ngx-audio-player' instead.`);\n        }\n        this.audioPlayerService = new AudioPlayerService();\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.audioPlayerService.setPlaylist(playlist);\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    displayedColumns: string[];\n    dataSource = new MatTableDataSource<Track>();\n    paginator: MatPaginator;\n\n    timeLineDuration: MatSlider;\n\n    tracks: Track[] = [];\n\n    @Input() displayTitle = true;\n    @Input() displayPlaylist = true;\n    @Input() displayVolumeControls = true;\n    @Input() pageSizeOptions = [10, 20, 30];\n    @Input() expanded = true;\n    @Input() autoPlay = false;\n    @Input() disablePositionSlider = false;\n\n\n    // Support for internationalization\n    @Input() displayArtist = false;\n    @Input() displayDuration = false;\n    @Input() tableHeader = 'Playlist';\n    @Input() titleHeader = 'Title';\n    @Input() artistHeader = 'Artist';\n    @Input() durationHeader = 'Duration';\n\n    currentIndex = 0;\n\n    @Output()\n    trackEnded: Subject<string> = new Subject<string>();\n\n    @ViewChild('audioPlayer', { static: true }) player: ElementRef;\n\n    iOS = (/iPad|iPhone|iPod/.test(navigator.platform)\n        || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1));\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    private startOffsetValue = 0;\n    @Input()\n    set startOffset(seconds: number) {\n        this.startOffsetValue = seconds;\n        this.player.nativeElement.currentTime = seconds;\n    }\n    get startOffset(): number {\n        return this.startOffsetValue;\n    }\n\n    @Input()\n    public endOffset = 0;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n            // BUG: Commenting for `ended` event not firing #66\n            // if (this.currentTime >= this.duration - this.endOffset) {\n            //     this.player.nativeElement.pause();\n            // }\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        if (!this.iOS) {\n            this.player.nativeElement.addEventListener('loadstart', () => {\n                this.loaderDisplay = true;\n            });\n        }\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('ended', () => {\n            this.trackEnded.next('ended');\n        });\n\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            if (this.currentTime >= this.duration - this.endOffset) {\n                this.player.nativeElement.currentTime = this.startOffset;\n            } else {\n                this.player.nativeElement.currentTime = this.currentTime;\n            }\n\n            this.player.nativeElement.play();\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(track?: Track): void {\n\n        if (track) {\n            this.startOffset = track.startOffset || 0;\n            this.endOffset = track.endOffset || 0;\n        }\n\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 50);\n\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n    ngOnInit() {\n\n        this.bindPlayerEvent();\n\n        // auto play next track\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                this.nextSong();\n            }\n        });\n\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.audioPlayerService.setCurrentTime(this.player.nativeElement.currentTime);\n        });\n\n        // Subscribe to playlist observer from AudioPlayerService and\n        // update the playlist within MatAdvancedAudioPlayerComponent\n        this.audioPlayerService.getPlaylist().subscribe(tracks => {\n            if (tracks !== null && tracks !== []) {\n                this.tracks = tracks;\n                this.initialize();\n            }\n        });\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('displayArtist') || changes.hasOwnProperty('displayDuration')) {\n            this.buildDisplayedColumns();\n        }\n    }\n\n    private buildDisplayedColumns() {\n        this.displayedColumns = ['title'];\n        if (this.displayArtist) {\n            this.displayedColumns.push('artist');\n        }\n        if (this.displayDuration) {\n            this.displayedColumns.push('duration');\n        }\n        this.displayedColumns.push('status');\n    }\n\n    initialize() {\n        this.buildDisplayedColumns();\n\n        // populate indexs for the track and configure\n        // material table data source and paginator\n        this.setDataSourceAttributes();\n\n\n        this.player.nativeElement.currentTime = this.startOffset;\n        this.updateCurrentTrack();\n\n        if (this.autoPlay) {\n            this.play();\n        }\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.tracks) {\n            this.tracks.forEach((track: Track) => {\n                track.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.tracks);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist === true\n            && (((this.currentIndex + 1) % this.paginator.pageSize) === 0\n                || (this.currentIndex + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if ((this.currentIndex + 1) >= this.tracks.length) {\n            this.currentIndex = 0;\n        } else {\n            this.currentIndex++;\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist === true\n                && (((this.currentIndex) % this.paginator.pageSize) === 0\n                    || (this.currentIndex === 0))) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            if ((this.currentIndex - 1) < 0) {\n                this.currentIndex = (this.tracks.length - 1);\n            } else {\n                this.currentIndex--;\n            }\n        } else {\n            this.resetSong();\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.tracks[this.currentIndex].link;\n    }\n\n    selectTrack(index: number): void {\n        this.currentIndex = index - 1;\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    updateCurrentTrack() {\n        this.audioPlayerService.setCurrentTrack(this.tracks[this.currentIndex]);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({ name: 'secondsToMinutes' })\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const hours = ('0' + Math.floor(time / 3600)).slice(-2);\n        const minutes = ('0' + Math.floor((time % 3600) / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        if (hours !== '00'){ return `${hours}:${minutes}:${seconds}`; }\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AudioPlayerComponent } from './component/ngx-audio-player/ngx-audio-player.component';\n\n@NgModule({\n  declarations: [SecondsToMinutesPipe, AudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [AudioPlayerComponent]\n})\nexport class NgxAudioPlayerModule {\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n  startOffset?: number;\n  endOffset?: number;\n  duration?: number;\n  artist?: string;\n  public toString = (): string => {\n    return `Track (index: ${this.index}, title: ${this.title})`;\n  }\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/ngx-audio-player/ngx-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SecondsToMinutesPipe as ɵa} from './lib/pipe/seconds-to-minutes';"]}