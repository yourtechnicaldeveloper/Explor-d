{"version":3,"file":"ngx-audio-player.js","sources":["ng://ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng://ngx-audio-player/lib/component/ngx-audio-player/ngx-audio-player.component.ts","ng://ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng://ngx-audio-player/lib/ngx-audio-player.module.ts","ng://ngx-audio-player/lib/model/track.model.ts","ng://ngx-audio-player/public_api.ts","ng://ngx-audio-player/ngx-audio-player.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioPlayerService {\n\n  // Dynamic update of playlist\n  tracks: Track[] = [];\n  playlistSubject$: BehaviorSubject<Track[]> =\n    new BehaviorSubject<Track[]>(this.tracks);\n\n  // Get the current track\n  currentTrack: Track = null;\n  currentTrackSubject$: BehaviorSubject<Track> =\n    new BehaviorSubject<Track>(this.currentTrack);\n\n  // Get the current time\n  currentTime: any = null;\n  currentTimeSubject$: BehaviorSubject<any> =\n    new BehaviorSubject<any>(this.currentTime);\n\n  setPlaylist(tracks: Track[]) {\n    this.tracks = tracks;\n    this.playlistSubject$.next(this.tracks);\n  }\n\n  getPlaylist(): Observable<Track[]> {\n    return this.playlistSubject$.asObservable();\n  }\n\n  setCurrentTrack(currentTrack: Track) {\n    this.currentTrack = currentTrack;\n    this.currentTrackSubject$.next(this.currentTrack);\n  }\n\n  getCurrentTrack(): Observable<Track> {\n    return this.currentTrackSubject$.asObservable();\n  }\n\n  setCurrentTime(currentTime: any) {\n    this.currentTime = currentTime;\n    this.currentTimeSubject$.next(this.currentTime);\n  }\n\n  getCurrentTime(): Observable<any> {\n    return this.currentTimeSubject$.asObservable();\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, Output, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Track } from '../../model/track.model';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'ngx-audio-player',\n    templateUrl: './ngx-audio-player.component.html',\n    styleUrls: ['./ngx-audio-player.component.css']\n})\nexport class AudioPlayerComponent implements OnInit, OnChanges {\n\n    audioPlayerService: AudioPlayerService;\n    constructor(elem: ElementRef) {\n        if (elem.nativeElement.tagName.toLowerCase() === 'mat-advanced-audio-player') {\n            console.warn(`'mat-advanced-audio-player' selector is deprecated; use 'ngx-audio-player' instead.`);\n        }\n        this.audioPlayerService = new AudioPlayerService();\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.audioPlayerService.setPlaylist(playlist);\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    displayedColumns: string[];\n    dataSource = new MatTableDataSource<Track>();\n    paginator: MatPaginator;\n\n    timeLineDuration: MatSlider;\n\n    tracks: Track[] = [];\n\n    @Input() displayTitle = true;\n    @Input() displayPlaylist = true;\n    @Input() displayVolumeControls = true;\n    @Input() pageSizeOptions = [10, 20, 30];\n    @Input() expanded = true;\n    @Input() autoPlay = false;\n    @Input() disablePositionSlider = false;\n\n\n    // Support for internationalization\n    @Input() displayArtist = false;\n    @Input() displayDuration = false;\n    @Input() tableHeader = 'Playlist';\n    @Input() titleHeader = 'Title';\n    @Input() artistHeader = 'Artist';\n    @Input() durationHeader = 'Duration';\n\n    currentIndex = 0;\n\n    @Output()\n    trackEnded: Subject<string> = new Subject<string>();\n\n    @ViewChild('audioPlayer', { static: true }) player: ElementRef;\n\n    iOS = (/iPad|iPhone|iPod/.test(navigator.platform)\n        || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1));\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    private startOffsetValue = 0;\n    @Input()\n    set startOffset(seconds: number) {\n        this.startOffsetValue = seconds;\n        this.player.nativeElement.currentTime = seconds;\n    }\n    get startOffset(): number {\n        return this.startOffsetValue;\n    }\n\n    @Input()\n    public endOffset = 0;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n            // BUG: Commenting for `ended` event not firing #66\n            // if (this.currentTime >= this.duration - this.endOffset) {\n            //     this.player.nativeElement.pause();\n            // }\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        if (!this.iOS) {\n            this.player.nativeElement.addEventListener('loadstart', () => {\n                this.loaderDisplay = true;\n            });\n        }\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('ended', () => {\n            this.trackEnded.next('ended');\n        });\n\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            if (this.currentTime >= this.duration - this.endOffset) {\n                this.player.nativeElement.currentTime = this.startOffset;\n            } else {\n                this.player.nativeElement.currentTime = this.currentTime;\n            }\n\n            this.player.nativeElement.play();\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(track?: Track): void {\n\n        if (track) {\n            this.startOffset = track.startOffset || 0;\n            this.endOffset = track.endOffset || 0;\n        }\n\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 50);\n\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n    ngOnInit() {\n\n        this.bindPlayerEvent();\n\n        // auto play next track\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                this.nextSong();\n            }\n        });\n\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.audioPlayerService.setCurrentTime(this.player.nativeElement.currentTime);\n        });\n\n        // Subscribe to playlist observer from AudioPlayerService and\n        // update the playlist within MatAdvancedAudioPlayerComponent\n        this.audioPlayerService.getPlaylist().subscribe(tracks => {\n            if (tracks !== null && tracks !== []) {\n                this.tracks = tracks;\n                this.initialize();\n            }\n        });\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('displayArtist') || changes.hasOwnProperty('displayDuration')) {\n            this.buildDisplayedColumns();\n        }\n    }\n\n    private buildDisplayedColumns() {\n        this.displayedColumns = ['title'];\n        if (this.displayArtist) {\n            this.displayedColumns.push('artist');\n        }\n        if (this.displayDuration) {\n            this.displayedColumns.push('duration');\n        }\n        this.displayedColumns.push('status');\n    }\n\n    initialize() {\n        this.buildDisplayedColumns();\n\n        // populate indexs for the track and configure\n        // material table data source and paginator\n        this.setDataSourceAttributes();\n\n\n        this.player.nativeElement.currentTime = this.startOffset;\n        this.updateCurrentTrack();\n\n        if (this.autoPlay) {\n            this.play();\n        }\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.tracks) {\n            this.tracks.forEach((track: Track) => {\n                track.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.tracks);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist === true\n            && (((this.currentIndex + 1) % this.paginator.pageSize) === 0\n                || (this.currentIndex + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if ((this.currentIndex + 1) >= this.tracks.length) {\n            this.currentIndex = 0;\n        } else {\n            this.currentIndex++;\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist === true\n                && (((this.currentIndex) % this.paginator.pageSize) === 0\n                    || (this.currentIndex === 0))) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            if ((this.currentIndex - 1) < 0) {\n                this.currentIndex = (this.tracks.length - 1);\n            } else {\n                this.currentIndex--;\n            }\n        } else {\n            this.resetSong();\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.tracks[this.currentIndex].link;\n    }\n\n    selectTrack(index: number): void {\n        this.currentIndex = index - 1;\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    updateCurrentTrack() {\n        this.audioPlayerService.setCurrentTrack(this.tracks[this.currentIndex]);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({ name: 'secondsToMinutes' })\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const hours = ('0' + Math.floor(time / 3600)).slice(-2);\n        const minutes = ('0' + Math.floor((time % 3600) / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        if (hours !== '00'){ return `${hours}:${minutes}:${seconds}`; }\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AudioPlayerComponent } from './component/ngx-audio-player/ngx-audio-player.component';\n\n@NgModule({\n  declarations: [SecondsToMinutesPipe, AudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [AudioPlayerComponent]\n})\nexport class NgxAudioPlayerModule {\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n  startOffset?: number;\n  endOffset?: number;\n  duration?: number;\n  artist?: string;\n  public toString = (): string => {\n    return `Track (index: ${this.index}, title: ${this.title})`;\n  }\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/ngx-audio-player/ngx-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SecondsToMinutesPipe as ɵa} from './lib/pipe/seconds-to-minutes';"],"names":["tslib_1.__decorate"],"mappings":"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"}