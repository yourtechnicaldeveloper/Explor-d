{"version":3,"sources":["webpack:///src/app/pages/catagories/catagories-routing.module.ts","webpack:///src/app/pages/catagories/catagories.component.ts","webpack:///src/app/pages/catagories/catagories.module.ts","webpack:///src/app/pages/catagories/category-details/category-details.component.ts","webpack:///src/app/pages/catagories/category-details/category-details.component.html","webpack:///src/app/pages/catagories/category-list/category-list.component.ts","webpack:///src/app/pages/catagories/category-list/category-list.component.html","webpack:///src/app/pages/catagories/create-category/create-category.component.ts","webpack:///src/app/pages/catagories/create-category/create-category.component.html","webpack:///src/app/pages/catagories/create-category/dialog-overview-example-dialog.html","webpack:///src/app/pages/catagories/update-category/update-category.component.ts","webpack:///src/app/pages/catagories/update-category/update-category.component.html","webpack:///src/app/pages/catagories/update-category/dialog-overview-example-dialog.html"],"names":["routes","path","component","children","CatagoriesRoutingModule","forChild","imports","exports","routedComponents","CatagoriesComponent","title","selector","styleUrls","template","CatagoriesModule","declarations","CategoryDetailsComponent","restService","router","get","subscribe","data","categories","error","console","log","navigate","list","templateUrl","CategoryListComponent","reloadData","id","tour","category","find","x","pipe","filter","CreateCategoryComponent","http","fb","location","dialog","isFormSubmitted","form","group","name","required","icon","event","file","target","files","patchValue","updateValueAndValidity","invalid","formData","FormData","append","value","post","headers","getHeader","response","refresh","alert","makeHttpCall","r","openDialog","dialogRef","open","DialogOverviewExampleDialog","direction","massage","msg","afterClosed","result","isFormData","localStorage","getItem","submitForm","uploadFile","encapsulation","None","close","onNoClick","UpdateCategoryComponent","route","actRoute","isNotShowDiv","isShowDiv","submitted","activeRoute","params","valid","unsubscribe","controls","toggleDisplayDiv"],"mappings":"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","file":"catagories-catagories-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CatagoriesComponent } from './catagories.component';\r\nimport { CategoryListComponent } from '../catagories/category-list/category-list.component';\r\nimport { CategoryDetailsComponent } from '../catagories/category-details/category-details.component';\r\nimport { UpdateCategoryComponent } from '../catagories/update-category/update-category.component';\r\nimport { CreateCategoryComponent } from '../catagories/create-category/create-category.component';\r\nimport { AuthGuard } from 'app/core_auth/auth/auth.guard';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: CatagoriesComponent,\r\n  children: [\r\n      { path: 'category-list', component: CategoryListComponent},\r\n      { path: 'add', component: CreateCategoryComponent},\r\n      { path: 'update/:id', component: UpdateCategoryComponent,},\r\n      { path: 'view/:id', component: CategoryDetailsComponent},\r\n  ],\r\n  \r\n},];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CatagoriesRoutingModule {\r\n  \r\n }\r\n\r\nexport const routedComponents = [\r\n   CatagoriesComponent,\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-categories',\r\n  styleUrls: ['categories.component.scss'],\r\n  template: `\r\n\r\n\r\n<div class=\"container\">\r\n <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>`,\r\n})\r\nexport class CatagoriesComponent {\r\n\r\n    title = 'Angular 9 + Spring Boot 2 CRUD Tutorial';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CatagoriesComponent } from '../catagories/catagories.component';\r\nimport {\r\n  NbActionsModule,\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbRadioModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbIconModule,\r\n} from '@nebular/theme';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CreateCategoryComponent } from './create-category/create-category.component';\r\nimport { CategoryDetailsComponent } from './category-details/category-details.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { UpdateCategoryComponent } from './update-category/update-category.component';\r\nimport { CatagoriesRoutingModule } from './catagories-routing.module';\r\n\r\n\r\n@NgModule({\r\n \r\n  declarations: [CreateCategoryComponent, CategoryDetailsComponent, CategoryListComponent, UpdateCategoryComponent, CatagoriesComponent],\r\n  imports: [\r\n    CatagoriesRoutingModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    ThemeModule,\r\n    FormsModule,\r\n    NbCardModule,\r\n    NbUserModule,\r\n    NbButtonModule,\r\n    NbTabsetModule,\r\n    NbActionsModule,\r\n    NbRadioModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    NbIconModule,\r\n    NgxEchartsModule,\r\n  ]\r\n})\r\nexport class CatagoriesModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { RestService } from 'app/core_auth/services/rest.service';\nimport { CategoryListComponent } from '../category-list/category-list.component'; \nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'ngx-category-details',\n  templateUrl: './category-details.component.html',\n  styleUrls: ['./category-details.component.scss']\n})\nexport class CategoryDetailsComponent implements OnInit {\n\n  constructor(private restService: RestService, private router: Router) { }\n\n  categories: any [];\n\n  ngOnInit() {\n\n    this.restService.get(\"/category/categoryList\").subscribe((data) => {\n      this.categories = data.data;\n    }, (error) => {\n      console.log(error)\n    });\n\n  }\n  list(){\n    this.router.navigate(['/pages/categories/category-list']);\n  }\n\n}\n","<h2>Category Details</h2> \n\n<hr/>\n<div *ngIf=\"categories\">\n  <div>\n    <label><b>Name: </b></label> {{category.name}}\n  </div>\n  <div>\n    <label><b>Icon: </b></label> {{category.icon}}\n  </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to Category List</button><br>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { RestService } from 'app/core_auth/services/rest.service';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'ngx-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n  category: any;\n    \n  constructor(private restService: RestService) { }\n\n  categories: any [];\n\n  ngOnInit() {\n\n    \n    this.reloadData();\n  }\n  reloadData() {\n    this.restService.get(\"/category/categoryList\").subscribe((data) => {\n      this.categories = data.data;\n    }, (error) => {\n      console.log(error)\n    });\n  }\n  deleteCategory(id: string) {\n    const tour = this.category.find(x => x.id === id);\n    return this.category.delete(id)\n        .pipe(first())\n        .subscribe(() => this.categories = this.categories.filter(x => x.id !== id));\n  }\n  \n  \n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n        <!-- Links -->\n        <ul class=\"navbar-nav\">\n           <li class=\"nav-item\">\n               <h2>Category List</h2>\n           </li>\n           <li class=\"nav-item right-btn\">\n              <a routerLink=\"../add\" class=\"nav-link\" routerLinkActive=\"active\">Add Category</a>\n           </li>\n        </ul>\n       </nav>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Icon</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let category of categories ; let id = index\">\n            <td>{{id + 1}}</td>\n            <td>{{category.name}}</td>\n            <td><input type=\"image\" src=\"{{category.icon}}\"></td>\n            <td>\n              <button routerLink=\"../update/{{category._id}}\" class=\"btn btn-info\">Edit</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  ","import { Component, Inject, OnInit, ViewEncapsulation  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'ngx-create-category',\n  templateUrl: './create-category.component.html',\n  styleUrls: ['./create-category.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CreateCategoryComponent implements OnInit {\n  isFormSubmitted = false;\n  massage: string;\n  msg: string;\n  form: FormGroup;\n  category: any;\n  constructor(private http: HttpClient, private router: Router,public fb: FormBuilder, private location: Location,  public dialog: MatDialog) { \n    \n  }\n  \n\n  ngOnInit(): void{\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      icon: [null, Validators.required]\n    })\n  }\n\n  uploadFile(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      icon: file,\n      name:'',\n    });\n    this.form.get('icon').updateValueAndValidity()\n  }\n  submitForm() {\n    this.isFormSubmitted = true;\n\n    // Return if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    var formData: any = new FormData();\n    formData.append(\"name\", this.form.get('name').value);\n    formData.append(\"icon\", this.form.get('icon').value);\n    this.http.post('http://18.217.48.28:2000/category/create', formData, { headers: this.getHeader(FormData) }).subscribe(\n      (response) => this.refresh(response),\n      (error) => {\n        alert(\"Something Went Wrong Please Check\");\n        console.log(error)\n      }\n    )\n  }\n  refresh(response){\n    if(response['meta']['status'] == 201){\n      this.router.navigate(['/pages/categories/category-list']);\n      //alert(\"Category added Successfully\");\n      this.makeHttpCall();\n    }\n  }\n  makeHttpCall() {\n    this.http.get('https://jsonplaceholder.typicode.com/comments')\n      .subscribe((r) => {\n        console.log(r);\n        this.openDialog();\n      });\n  }\n  openDialog(): void {\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      direction: \"ltr\",\n      data: { massage: this.msg }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.msg = result;\n    });\n  }\n  getHeader(isFormData?) {\n    let headers: HttpHeaders = new HttpHeaders();\n    \n    if (!isFormData) {\n      headers = headers.append('Content-Type', 'json');\n    }\n    headers = headers.append('Authorization', localStorage.getItem('access_token'));\n    return headers;\n  }\n}\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n     <li class=\"nav-item\">\n         <h2>Create Category</h2>\n     </li>\n     <li class=\"nav-item right-btn\">\n      <a href=\"/pages/categories/category-list\" routerlink=\"/pages/categories/category-list\" class=\"btn nav-link\" ng-reflect-router-link=\"/pages/categories/category-list\">Back</a>\n     </li>\n  </ul>\n </nav>\n<div style=\"width: 500px; margin: auto;\">\n  <div class=\"submit-form\">\n      <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n        <div class=\"form-group\">\n          <label for=\"icon\">Icon</label>\n          <input type=\"file\" (change)=\"uploadFile($event)\" class=\"form-control\" name=\"icon\" [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.icon.errors) || (!form.controls.icon.pristine && form.controls.icon.invalid) }\" accept=\".png, .jpeg, .jpg\">\n          <div class=\"invalid-feedback\"\n              *ngIf=\"(isFormSubmitted && form.controls.icon.errors) || (!form.controls.icon.pristine && form.controls.icon.invalid)\">\n              <div *ngIf=\"form.controls.icon.errors.required\">Email is required</div>\n          </div>\n        </div>\n        <div class=\"form-group input-group-lg\">\n          <label for=\"name\">Name</label>\n          <input class=\"form-control\" placeholder=\"Name\" formControlName=\"name\" name=\"name\" [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.name.errors) || (!form.controls.name.pristine && form.controls.name.invalid) }\">\n          <div class=\"invalid-feedback\"\n              *ngIf=\"(isFormSubmitted && form.controls.name.errors) || (!form.controls.name.pristine && form.controls.name.invalid)\">\n              <div *ngIf=\"form.controls.name.errors.required\">Name is required</div>\n          </div>\n        </div>\n      <div class=\"form-group\">\n          <button class=\"btn btn-info\">Create</button>\n      </div>\n  </form>\n  </div>\n</div>","<div dir=\"rtl\" style=\"text-align: center;\">\r\n    <h1 mat-dialog-title style=\"text-align: center;background-color: #17a2b8;padding: 10px;font-size: 20px;margin: -30px -24px 30px;\">Success</h1>\r\n    <div mat-dialog-content>\r\n      <p>Category added Successfully</p>\r\n    </div>\r\n    <div mat-dialog-actions>  \r\n        <button mat-button style=\"color: #fff;background-color: #17a2b8;border-color: #17a2b8;padding: 5px 20px;border-radius: 7px;\" (click)=\"onNoClick()\">Ok</button>\r\n    </div>\r\n    </div>","import { Component, Inject, OnInit, ViewEncapsulation  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http';\nimport { RestService } from 'app/core_auth/services/rest.service';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute} from \"@angular/router\"; // ActivatedRoue is used to get the current associated components information.\nimport { Category } from 'app/_model/category';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'ngx-update-category',\n  templateUrl: './update-category.component.html',\n  styleUrls: ['./update-category.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class UpdateCategoryComponent implements OnInit {\n  isNotShowDiv = true\n  isShowDiv = false;\n  massage: string;\n  msg: string;\n  category: Category;\n  private activeRoute: any;\n  submitted = false;\n  form: FormGroup;\n  categories: any [];\n  \n  constructor(private restService: RestService, private http: HttpClient, private router: Router, private route: ActivatedRoute, public fb: FormBuilder, private location: Location , private actRoute: ActivatedRoute,  public dialog: MatDialog) { \n    this.form = this.fb.group({\n      name: ['', Validators.required ],\n      icon: [null]\n    })\n  }\n  get f() { return this.form.controls; }\n  toggleDisplayDiv() {\n    this.isShowDiv = !this.isShowDiv;\n    this.isNotShowDiv = !this.isNotShowDiv;\n  }\n  ngOnInit(): void{\n    var id;\n    this.activeRoute = this.route.params.subscribe(params => {\n    id = { \"_id\" : params['id'] };\n   });\n    this.restService.post(\"/category/view\", id).subscribe((data) => {\n      this.category = data.data;\n    }, (error) => {\n      console.log(error)\n    });\n  \n  }\n\n  uploadFile(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      icon: file,\n    });\n    this.form.get('icon').updateValueAndValidity()\n  }\n  submitForm() {\n    \n    var formData: any = new FormData();\n    if(this.form.get('icon').value != null)\n    {\n      formData.append(\"icon\", this.form.get('icon').value);\n    }\n    formData.append(\"name\", this.form.get('name').value);\n    var id;\n    this.activeRoute = this.route.params.subscribe(params => {\n    id = params['id'];\n    });\n    this.submitted = true;\n    if (this.form.valid) {\n      this.http.post('http://18.217.48.28:2000/category/categoryUpdate/' + id, formData, { headers: this.getHeader(FormData) }).subscribe(\n      (response) => {\n      this.makeHttpCall();\n      this.refresh(response)},\n      (error) => {\n        alert(\"Something Went Wrong Please Check\");\n        console.log(error)\n      }\n    );\n    }\n  }\n  refresh(response){\n    if(response['meta']['status'] == 200){\n      //alert(\"Category Updated successfully\");\n      this.router.navigate(['/pages/categories/category-list']);\n      \n    }\n  }\n  makeHttpCall() {\n    this.http.get('https://jsonplaceholder.typicode.com/comments')\n      .subscribe((r) => {\n        console.log(r);\n        this.openDialog();\n      });\n  }\n  openDialog(): void {\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      direction: \"ltr\",\n      data: { massage: this.msg }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.msg = result;\n    });\n  }\n  getHeader(isFormData?) {\n    let headers: HttpHeaders = new HttpHeaders();\n    \n    if (!isFormData) {\n      headers = headers.append('Content-Type', 'json');\n    }\n    headers = headers.append('Authorization', localStorage.getItem('access_token'));\n    return headers;\n  }\n\n  ngOnDestroy() {\n    if (this.activeRoute) {\n      this.activeRoute.unsubscribe();\n    }\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n     <li class=\"nav-item\">\n         <h2>Category Update</h2>\n     </li>\n     <li class=\"nav-item right-btn\">\n      <a href=\"/pages/categories/category-list\" routerlink=\"/pages/categories/category-list\" class=\"btn nav-link\" ng-reflect-router-link=\"/pages/categories/category-list\">Back</a>\n     </li>\n  </ul>\n </nav>\n<div style=\"width: 500px; margin: auto;\">\n  <div class=\"submit-form\">\n      <form [formGroup]=\"form\">\n        <div class=\"form-group\" [hidden]=\"isShowDiv\">\n          <input type=\"image\" src=\"{{category.icon}}\">\n        </div>\n        <div class=\"form-group\" [hidden]=\"isNotShowDiv\">\n          <label for=\"icon\">Change Icon</label>\n          <input type=\"file\" (change)=\"uploadFile($event)\" class=\"form-control\" name=\"icon\" accept=\".png, .jpeg, .jpg\">\n        </div>\n        <div class=\"form-group input-group-lg\" [hidden]=\"isShowDiv\">\n          <label for=\"name\">Name</label>\n          <input class=\"form-control\" placeholder=\"Name\" formControlName=\"name\" disabled name=\"name\" [(ngModel)]=\"category.name\">\n        </div>\n        <div class=\"form-group input-group-lg\" [hidden]=\"isNotShowDiv\">\n          <label for=\"name\">Name</label>\n          <input class=\"form-control\" placeholder=\"Name\" formControlName=\"name\" name=\"name\" [(ngModel)]=\"category.name\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n        </div>\n        </div>\n      \n      <div class=\"form-group\">\n          <button (click)=toggleDisplayDiv() [hidden]=\"isShowDiv\" class=\"btn btn-info\" style=\"margin-left: 10px;\">Update</button>\n          <button [hidden]=\"isNotShowDiv\" (click)=\"submitForm()\" class=\"btn btn-info\" style=\"margin-left: 10px;\">Save</button>\n      </div>\n  </form>\n  </div>\n</div>","<div dir=\"rtl\" style=\"text-align: center;\">\r\n    <h1 mat-dialog-title style=\"text-align: center;background-color: #17a2b8;padding: 10px;font-size: 20px;margin: -30px -24px 30px;\">Success</h1>\r\n    <div mat-dialog-content>\r\n      <p>Category Updated Successfully</p>\r\n    </div>\r\n    <div mat-dialog-actions>  \r\n      <button mat-button style=\"color: #fff;background-color: #17a2b8;border-color: #17a2b8;padding: 5px 20px;border-radius: 7px;\" (click)=\"onNoClick()\">Ok</button>\r\n    </div>\r\n    </div>"]}